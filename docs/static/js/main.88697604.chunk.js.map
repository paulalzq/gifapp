{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","onChange","target","value","placeholder","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifApp","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,G,MAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,YAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAiB9C,OACI,0BAAMC,SAXS,SAACC,GAChBA,EAAEC,iBAGGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAU,MAAI,CAACP,MAC9BC,EAAc,OAMd,+CAAsBD,GACtB,2BACIQ,KAAK,OAELC,SAnBQ,SAACN,GACjBF,EAAeE,EAAEO,OAAOC,QAmBhBC,YAAY,qB,uBCzBfC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGbC,EAHa,iDAGoCC,UAAWH,GAH/C,+DAIII,MAAOF,GAJX,cAIbG,EAJa,gBAKIA,EAASC,OALb,uBAKXC,EALW,EAKXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,yBAAKgB,UAAU,4CAEX,yBACIC,IAAKjB,EACLkB,IAAKR,MCJRS,EAAU,SAAC,GAAwB,IAAtBrB,EAAqB,EAArBA,SAAqB,KAAXQ,KCFR,SAACR,GAAc,IAAD,EACZf,mBAAS,CAC/BsB,KAAM,GACNe,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAyBtC,OAnBAC,qBAAW,WACP1B,EAASC,GACJ0B,MAAM,SAAAC,GACHC,YAAW,WACPZ,QAAQC,IAAIU,GACZH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAEd,UAEZ,CAACtB,IAQGuB,EDpB0BM,CAAa7B,IAAjCa,EAH8B,EAGnCN,KAAae,EAHsB,EAGtBA,QAErB,OACI,yBAAKJ,UAAU,aACTI,EAAU,uBAAGJ,UAAU,oCAAb,WAA8D,KAC1E,oCACIL,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIoB,IAAKpB,EAAIC,IACJD,UEgBdqB,EA5BA,WAAM,MAGmB9C,mBAAS,CAAC,aAH7B,mBAGVQ,EAHU,KAGET,EAHF,KAWjB,OACI,oCACI,sCACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BACMS,EAAWgB,KAAK,SAACT,GAAD,OACd,kBAAC,EAAD,CACI8B,IAAM9B,EACNA,SAAWA,UCpBnCgC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.88697604.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    \n    let [inputValue, setinputValue] = useState('trending');\n\n    const inputChange = (e)=> {\n        setinputValue( e.target.value );\n    }\n    const SendSubmit = (e)=>{\n        e.preventDefault(); // Esto previene el refrescamiento de la página\n        // console.log('Hecho')\n        \n        if ( inputValue.trim().length > 0 ) {\n            setCategories( categories => [inputValue]);\n            setinputValue('');\n        }\n    }\n    \n    return (\n        <form onSubmit={ SendSubmit }>  \n            <h3>Mostrando gifs: { inputValue }</h3>\n            <input \n                type=\"text\"\n                // value={ inputValue } Por si quiero mostrar algo por defecto\n                onChange={ inputChange }\n                placeholder=\"Busca aquí\"\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}","\n\nexport const getGifs = async( category ) => {\n\n    // const urlR = 'https://api.giphy.com/v1/gifs/trending&api_key=vQ7cVmYpXEKP0FWzkuGqA7T3g4htHqVZ';\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=30&api_key=vQ7cVmYpXEKP0FWzkuGqA7T3g4htHqVZ`;\n    const response = await fetch( url );\n    const { data } = await response.json();\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    \n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n    console.log(id, title, url)\n    return (\n        <div className=\"card animate__animated animate__fadeInUp\">\n            {/* <h4>{title}</h4> */}\n            <img\n                src={url}\n                alt={title}\n            />\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n// import { getGifs } from '../helpers/getGifs';\n\nexport const GifGrid = ({ category, gifs }) => {\n\n    // const [images, setImages] = useState([]);\n    const { data:images, loading } = useFetchGifs(category);\n    \n    return (\n        <div className=\"card-grid\">\n            { loading ? <p className=\"animate__animated animate__flash\">Loading</p> : null }\n            <>{\n                images.map( img => (\n                    <GifGridItem\n                        key={img.id}\n                        { ...img }\n                        // img={img}\n                    />\n                ))\n            }\n            </>\n        </div>\n    )\n}\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    const [state, setstate] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect( () => {\n        getGifs( category )\n            .then( imgs =>{\n                setTimeout(() => {\n                    console.log(imgs)\n                    setstate({\n                        data: imgs,\n                        loading: false,\n                    });\n                }, 500);\n            })\n    }, [category])\n    // useEffect(() => {\n    //     getGifs( category )\n    //         .then( imgs  => setImages( imgs ))\n    // }, [ category ]);\n\n   \n\n    return state;\n}","import React, { useState } from 'react';\nimport './GifApp.css';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifApp = () => {\n\n    // let categories = ['Sailor moon', 'bjork', 'eco'];\n    const [categories, setCategories] = useState(['trending'])\n\n    // const agregarCategoria = () => {\n    //     setCategories( ['Pachuco', ...categories] );\n    // };\n\n    // const giphy = 'vQ7cVmYpXEKP0FWzkuGqA7T3g4htHqVZ';\n\n    return (\n        <>\n            <h2>GifApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr />\n            \n            <ol>\n                { categories.map( (category) => \n                    <GifGrid\n                        key={ category }\n                        category={ category }/>\n                ) }\n            </ol>\n        </>\n    )\n};\n\nexport default GifApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifApp from './GifApp';\n\nReactDOM.render(\n    <GifApp />,\n  document.getElementById('root')\n);\n\n\n// vQ7cVmYpXEKP0FWzkuGqA7T3g4htHqVZ"],"sourceRoot":""}